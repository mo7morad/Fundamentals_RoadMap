<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbPersonImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pbPersonImage.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABwxJREFUeF7tnU9oHGUYxt1kd2f/bzZ/dkPSJMUET0kxpgcjpYhI8CAixYMU6aEU
        kSLFk4hIoYTiQcRDEU8exINIDh5EpEgJUoqIFJEiHqQUkSJSRIKUUkqIv3ec4DZ9d7tJdmffb2YeePJ8
        mb/f+8w333zfzDezj1jHxMREKZfLPZdOp88ODg6uwasDAwN/wLupVGpLKGmZJvNkGVlW1pF1g80k2A0a
        jUYhm82ewMyLGHyXSVt7oawr25BtyTaZlqAdarXacCaTOY9xf/GvaupeKdtk26uyD/5P0IyFhYUBSunp
        Xhi/k7IP9vXa4uLiAP8nKJfLE1QT6yRVw3pF9nmpUqmMk44v8vn8Ybl4klRN6jXZ903y8ATp+IFWylGq
        g39IquaERfKwwUF4inR8IKVOAiepmhI2JS+FQuEQ6eijWq3WOfV/J6ma0S+SpxtDQ0PRbyHRSfoSUU3o
        N8nbGhpdeJ53HFGDt0KuTS+i0cP4+HjBYtWzk+Tx+vT0dJZ0tEAv9A1EDdoa6aidRKOD+fl5CtbADZJq
        wNZIJ+0aGh3InUlEDdYqaZY+iUYDtC4+QdRArZI8f4C6j+XlZal+bpFUA7VKqqFfUfdRKpUeR9QgrXN4
        ePgA6jZo/byKqAFaJ/2WY6jboC79EFEDtE7yfhZ1G9Sl3yBqgNZJ3j9F3QZB/IKoAVoneZcHRW7DxRbQ
        NjkAP6FugwOw51EN/SYHQHrvboMg1OBcYCqV+g11GxyATUQN0DrJu/sHgCroNqIGaJ0cAGlAuA0OwE1E
        DdA6OQDfo26DIKQloQZoneRdHp+6DYL4GlEDtE56wh+hboMDIEGoAVpnJpN5E3UbLj2K3EnP89x/QJ/P
        559F1ACts1qtzqFuo9FojCJqgJZJ621jZWUlGiOoCeY6ogZqlVy7LqHRAK0Jua2rBmqV5HkVjQaCcTZq
        oFaZy+WeQaOBWq02jaiBWmQqlbo9MzOTIx0dUKfKYCc1YGskr1+h0QJ16nlEDdga5R0yNFooFouHETVg
        S6T62aTKjOa7YzRHZbCTGrgVUv18i0YTVEPnEDVwK6T6kXFM0USlUpGuvRq4BVL93BkZGYn2a0qc4qG/
        E9wpOUM/Q6MNz/NeRlQD+s18Ph+dzlcryOs/XIz79nJ2K5In95//dopMJiNjLlUj+kUuvqfReIB29qh0
        90mqZoRN8vJ3vV6P17eFuOCZGTXNGfkuGi+Uy+WDlLx7JFVTwqI0PavVajy/msJZ8DGiGhMWycMFNJ4I
        zoK+Dd6V0k/n0P3XkPYDSmDfhq3EuvRvg/p3gpIYeotI9hnbun8nKInvIapRvSL7fB9NIKAkHqBEhtYi
        Yl+b1P0HSSfYRjAMRDWs22RfV9AEzaAz9DaiGtZtUv3I49EEzfA87yVENazbzGazJ9AEzeAMeB5RDes2
        OQBySzxBMzgAryOqYd0m+3oLTdCMYCyOali3GekH73tBoVCQr9eG+jZlPp8/giYYAsHTKNWoXlFGbNP/
        qJOOL+gMTWDEDyRVk3pN9n2tVCrJuNX4IZfLHaNH+idJ1ZywSB5uBQMF4gHq+yNh9no7JXm6zHXhadLR
        Q6PRqND2PkmQ8uKzaoAVkserMjpubGyswv/uol6vDxPIcQJak1u/TFIDtkryfIe8f0EMr4wCptnG3Nxc
        llP4aDqdPkfGrxBA35/3dovEsklM39GBW5UYZ2dn+//yxuTkZIUL6Upg+LqLpXyvDM6OdWJfFQ/EC6b3
        FlQpQ/IVQXZ6gZ3/GHYJJ9AX0I4Q9rsI4oV4It6IR+IV0/ePqakpqkC/Ht/X73l1g+ThMtoRMOJzRN1O
        GBSvxDPxTjxk2u4wMzOTZuUzdFRMjeHs5HvO5XL50bDPznYUD8VL8ZT/Hw6ClE+dm/zEDKXqob9wQek3
        +Z1S8VS8Jd0aMjyb0tP3XzZqRfK2SQlv+f0Ga2NOd1K8FY9JPwiOziHL5m8zKOEqaCaafwVKPBavSf8P
        qZ/kxhRJdSVLlBIuJZ30fQh+IsWJb5SK1/ddE7hInELUhS2Skv7AN52JQcb3q8tbZOD5f+Di5ux33Vxl
        4Lk/KOqx7YkJw6XvPaezs9/3d52+97QqnP2onuv0vacucur7/uRXbjOoCOap61mk7z1/ftZmWiWn7RlU
        RTBPXc8ife9pk5p7Z7cdi8Viyx9gDuap61mk7z1/zPd+t0leN5aWllre1JJ5sgxJdX1r9L3nNHDm8/Lk
        9SLaFsEy6vrW6HvPUVBnWiR1/DtoWwTLqOtbY+C9PtMiW95JbEKwjLq+UaoTzTGVSt2bmpoqkG4LWUaW
        JaluxxzJrD7DGKkvO/4xhWBZdTuW6HvvyjWAXmPHbzUGy6rbsUTfe0qLOtMavV18Sj5YVt2OJfreu3IA
        xsbGOh5KHiyrbscSBwcHt/4FqdnyCW/fFTMAAAAASUVORK5CYII=
</value>
  </data>
</root>